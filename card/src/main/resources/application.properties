spring.application.name=card-service





spring.datasource.url=jdbc:postgresql://localhost:5432/banking
spring.datasource.username=postgres
spring.datasource.password=1234
spring.datasource.driver-class-name=org.postgresql.Driver


spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true






spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000



server.port=8004
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/


# Kafka Consumer Configuration
spring.kafka.consumer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=card-service-group
spring.kafka.consumer.auto-offset-reset=earliest

# Mapping a logical name to the fully qualified class name of your event
spring.kafka.consumer.properties.spring.json.type.mapping=account:com.example.card.service.AccountCreatedEvent

# Configure ErrorHandlingDeserializer for both key and value
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

# Delegate the actual deserialization to the correct deserializer implementations
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# Provide a valid default type (ensure this class is on the classpath)
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.card.service.AccountCreatedEvent

# Set trusted packages for deserialization (use * with caution)
spring.kafka.consumer.properties.spring.json.trusted.packages=*
kafka.topic.account-created=account_created_topic



spring.autoconfigure.exclude=org.springframework.boot.actuate.autoconfigure.tracing.BraveAutoConfiguration


# Ensure 100% of requests are sampled
management.tracing.sampling.probability=1.0

# Export traces to Zipkin
management.tracing.exporter.zipkin.enabled=true
management.tracing.exporter.zipkin.endpoint=http://localhost:9411/api/v2/spans

# Expose actuator endpoints (optional but useful)
management.endpoints.web.exposure.include=health,info,trace,prometheus

# Enable debug logging for tracing (to get more detailed logs)
logging.level.io.micrometer.tracing=DEBUG




